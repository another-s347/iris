syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc CreateObject (CreateRequest) returns (NodeObject) {}
  rpc Init (InitRequest) returns (NodeObject) {}
  rpc Call (CallRequest) returns (NodeObject) {}
  rpc Apply (ApplyRequest) returns (NodeObject) {}
  rpc TorchCall(TorchRpcCallRequest) returns (NodeObject) {}
  rpc GetAttr(GetAttrRequest) returns (NodeObject) {}
  rpc GetParameter(GetParameterRequest) returns (NodeObject) {}
  rpc GetValue(GetParameterRequest) returns (Value) {}
  rpc DelObject(GetParameterRequest) returns (ObjectId) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message NodeObjectRef {
  string type = 1;
  uint64 id = 2;
  string location = 3;
}

message CallArgs {
  bytes args = 1;
  bytes kwargs = 2;
  bool recursive = 3;
}

message CreateRequest {
  string module = 1;
  string qualname = 2;
  CallArgs arg = 3;
} 

message InitRequest {
  repeated string modules = 1;
  repeated string paths = 2;
  uint32 rank=3;
}

message CallRequest {
  uint64 object_id = 1;
  CallArgs arg = 2;
  string attr = 3;
}

message ApplyRequest {
  bytes func = 1;
  CallArgs arg = 2;
}

message TorchRpcCallRequest {
  string target_node = 1;
  uint64 object_id = 2;
  string attr = 3;
  CallArgs arg = 4;
  string torch_func = 5;
  bool to_here = 6;
}

message NodeObject {
  oneof value {
    uint64 u64=1;
  }
  uint64 id = 3;
  bytes exception = 4;
  string location = 5;
  string type = 6;
}

message GetAttrRequest {
  uint64 object_id = 1;
  string attr = 2;
}

message GetParameterRequest {
  uint64 object_id = 1;
}

message ModuleRef {
  string module = 1;
  string qualname = 2;
}

message ObjectId {
  uint64 id = 1;
}

message Value {
  bytes data = 1;
}